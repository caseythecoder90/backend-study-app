spring:
  application:
    name: flashcards

  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC
    date-format: "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"

  data:
    mongodb:
      uri: ${MONGO_URL}
      database: ${MONGODB_DATABASE:flashcards}
      auto-index-creation: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
            redirect-uri: ${GOOGLE_REDIRECT_URI:https://backend-study-app-production.up.railway.app/login/oauth2/code/google}
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - user:email
              - read:user
            redirect-uri: ${GITHUB_REDIRECT_URI:https://backend-study-app-production.up.railway.app/login/oauth2/code/github}

  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      connection-timeout: 60s
      read-timeout: 60s
      chat:
        options:
          model: ${OPENAI_MODEL:gpt-4o-mini}
          temperature: ${OPENAI_TEMPERATURE:0.7}
          max-tokens: ${OPENAI_MAX_TOKENS:2000}

    anthropic:
      api-key: ${ANTHROPIC_API_KEY}
      connection-timeout: 60s
      read-timeout: 60s
      chat:
        options:
          model: ${ANTHROPIC_MODEL:claude-3-sonnet-20240229}
          temperature: ${ANTHROPIC_TEMPERATURE:0.7}
          max-tokens: ${ANTHROPIC_MAX_TOKENS:2000}

    vertex:
      ai:
        gemini:
          project-id: ${VERTEX_AI_PROJECT_ID}
          location: ${VERTEX_AI_LOCATION:us-central1}
          credentials-uri: ${VERTEX_AI_CREDENTIALS_URI:classpath:study-app-472920-1182c7a4b7dd.json}
          transport: rest
          connection-timeout: 60s
          read-timeout: 60s
          write-timeout: 60s
          chat:
            options:
              model: ${VERTEX_AI_MODEL:gemini-2.0-flash}
              temperature: ${VERTEX_AI_TEMPERATURE:0.7}
              max-output-tokens: ${VERTEX_AI_MAX_TOKENS:2000}

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
  forward-headers-strategy: framework

logging:
  level:
    root: INFO
    com.flashcards.backend: DEBUG
    org.springframework.data.mongodb: DEBUG

openapi:
  info:
    title: Flashcards API
    description: Backend APIs for flashcard application with AI-powered card generation
    version: v1.0.0
    contact:
      name: Casey Quinn
      email: caseythecoder90@gmail.com
    license:
      name: MIT License
      url: https://opensource.org/licenses/MIT
  servers:
    - url: http://localhost:8080
      description: Development server
    - url: https://backend-study-app-production.up.railway.app
      description: Production server

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000}  # 24 hours in milliseconds
  issuer: ${JWT_ISSUER:flashcards-app}

app:
  name: ${APP_NAME:Flashcards}

oauth:
  success-redirect-url: ${OAUTH_SUCCESS_REDIRECT_URL:https://backend-study-app-production.up.railway.app/auth/success}
  failure-redirect-url: ${OAUTH_FAILURE_REDIRECT_URL:https://backend-study-app-production.up.railway.app/auth/error}

jasypt:
  encryptor:
    password: ${JASYPT_ENCRYPTOR_PASSWORD}
    algorithm: PBEWITHHMACSHA512ANDAES_256
    key-obtention-iterations: 1000
    pool-size: 1
    provider-name: SunJCE
    salt-generator-class-name: org.jasypt.salt.RandomSaltGenerator
    iv-generator-class-name: org.jasypt.iv.RandomIvGenerator
    string-output-type: base64

admin:
  email: ${ADMIN_EMAIL}
  username: ${ADMIN_USERNAME}
  password: ${ADMIN_PASSWORD}
  first-name: ${ADMIN_FIRST_NAME}
  last-name: ${ADMIN_LAST_NAME}

ai:
  limits:
    max-flashcards-per-request: 20
    max-text-length: 10000
    rate-limit-per-minute: 10
  cache:
    enabled: true
    ttl: 3600
  fallback:
    enabled: true
    max-retries: 2
    fallback-models:
      - GPT_4O_MINI
      - CLAUDE_3_5_HAIKU
      - GEMINI_1_5_FLASH